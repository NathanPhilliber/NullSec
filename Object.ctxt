#BlueJ class context
comment0.params=
comment0.target=void\ act()
comment1.params=angle
comment1.target=int\ angleRange(int)
comment1.text=\r\n\ \r\n\ \r\n\ john\ start\r\n\ \r\n
comment10.params=
comment10.target=void\ scheduleRemoval()
comment11.params=
comment11.target=void\ checkRemoval()
comment12.params=
comment12.target=boolean\ isScheduledForRemoval()
comment13.params=clss
comment13.target=java.util.List\ getTouchedObjects(java.lang.Class)
comment13.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ Returns\ a\ List\ of\ all\ Actors,\ that\ are\ touched\ by\ this\ object
comment14.params=clss
comment14.target=boolean\ touch(java.lang.Class)
comment14.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ Return,\ if\ it\ intersects\ an\ actor\ of\ the\ given\ class
comment15.params=clss
comment15.target=greenfoot.Actor\ getOneTouchedObject(java.lang.Class)
comment15.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ It\ returns\ a\ touched\ actor\ of\ the\ given\ class,\ if\ there's\ one\ touched.
comment16.params=a_big
comment16.target=boolean\ touch(greenfoot.Actor)
comment16.text=This\ method\ is\ a\ pixel\ perfect\ collision\ detection.\ Returns\ true,\ if\ the\ object\ touchs\ the\ given\ Actor
comment17.params=isPaused
comment17.target=void\ pause(boolean)
comment18.params=
comment18.target=void\ dockMenu()
comment19.params=
comment19.target=void\ removeDockMenu()
comment2.params=
comment2.target=int\ mouseAngle()
comment20.params=P
comment20.target=void\ setIsPlayer(boolean)
comment21.params=
comment21.target=boolean\ getIsPlayer()
comment22.params=angle\ LV\ X\ Y
comment22.target=void\ projectile(int,\ int,\ double,\ double)
comment23.params=angle\ X\ Y
comment23.target=void\ spawnProjectile(int,\ double,\ double)
comment24.params=angle\ LV\ X\ Y
comment24.target=void\ beam(int,\ int,\ double,\ double)
comment25.params=angle\ LV\ X\ Y
comment25.target=void\ missile(int,\ int,\ double,\ double)
comment26.params=angle\ LV\ X\ Y
comment26.target=void\ mine(int,\ int,\ double,\ double)
comment27.params=angle\ LV\ X\ Y
comment27.target=void\ fireball(int,\ int,\ double,\ double)
comment28.params=angle\ LV\ X\ Y
comment28.target=void\ plasmaBall(int,\ int,\ double,\ double)
comment29.params=angle\ X\ Y
comment29.target=void\ spawnPlasmaBall(int,\ double,\ double)
comment3.params=dist
comment3.target=void\ setRemovalOffEdge(int)
comment30.params=
comment30.target=boolean\ rMButton()
comment4.params=dist
comment4.target=boolean\ isOffEdge(int)
comment5.params=
comment5.target=void\ setRemovalAtEdge()
comment6.params=
comment6.target=boolean\ isAtEdge()
comment7.params=x\ y
comment7.target=void\ addExplosion(double,\ double)
comment8.params=x\ y
comment8.target=void\ addRocketTrail(double,\ double)
comment9.params=x\ y
comment9.target=void\ addFire(double,\ double)
numComments=31
